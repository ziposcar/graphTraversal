# coding=utf-8
# 对获取的覆盖信息进行处理
#目标敏感路径的信息存储
#计算fit，给出一个结果

#这里是一个种群要求覆盖给定的敏感路径数N。种群大小就是N，
# 产生N条序列，序列产生数据，传递给测试脚本，依次执行，获取各个序列的覆盖信息，
#通过与目标敏感路径的信息进行比对计算（具体怎么算还没想的很清楚），确定哪一条序列覆盖上哪一条敏感路径（fitness1>0的）
    #fitness1<=0的就意味着压根没触发对应的迁移，重新生序列（第一层GA，选择交叉变异的对象是序列）
    #fitness1>0的意味着已经触发了相关的迁移，fitness1与敏感路径的fitness_target进行比较，
         #如果fitness1 = fitness_target则该测试用例完全覆盖某一敏感路径，存储该测试用例
         #若fitness1 ！= fitness_target，则没有产生满足的数据来完整覆盖敏感路径，对这条序列的数据进行局部搜索（第二层爬山）


